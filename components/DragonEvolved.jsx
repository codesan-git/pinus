// 'use client'
// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// */

// import React, { useRef, useEffect, useState } from "react";
// import { useGLTF, useAnimations, Environment, OrbitControls } from "@react-three/drei";
// import { GLTF } from "three-stdlib";
// import { Canvas } from '@react-three/fiber'
// import * as THREE from "three";

// type GLTFResult = GLTF & {
//     nodes: {
//         Cube221: THREE.SkinnedMesh;
//         Cube221_1: THREE.SkinnedMesh;
//         Cube221_2: THREE.SkinnedMesh;
//         Cube221_3: THREE.SkinnedMesh;
//         Cube221_4: THREE.SkinnedMesh;
//         Root: THREE.Bone;
//     };
//     materials: {
//         Dragon_Main: THREE.MeshStandardMaterial;
//         Dragon_Secondary: THREE.MeshStandardMaterial;
//         Dragon_Horn: THREE.MeshStandardMaterial;
//         Eye_Black: THREE.MeshStandardMaterial;
//         Eye_White: THREE.MeshStandardMaterial;
//     };
//     animations: GLTFActions[]
// };

// type ActionName =
//     | "Death"
//     | "Fast_Flying"
//     | "Flying_Idle"
//     | "Headbutt"
//     | "HitReact"
//     | "No"
//     | "Punch"
//     | "Yes";
// type GLTFActions = Record<ActionName, THREE.AnimationAction>;

// export function DragonModel(props: JSX.IntrinsicElements["group"]) {
//     const group = useRef<THREE.Group>(null);
//     const { nodes, materials, animations } = useGLTF(
//         "/models/Dragon_Evolved.gltf"
//     ) as GLTFResult;
//     const { actions } = useAnimations(animations, group);
//     const [animationName, setAnimationName] = useState("Punch");
//     const [isHovered, setIsHovered] = useState(false);

//     useEffect(() => {
//         const action = actions[animationName];

//         if (action) {
//             if (isHovered) {
//                 action.reset().fadeIn(0.5).play();
//             } else {
//                 action.fadeOut(0.5).stop();
//             }
//         }
//     }, [animationName, isHovered, actions]);

//     const handleClick = () => {
//         setAnimationName((prevAnimation) =>
//             prevAnimation === "Punch" ? "Headbutt" : "Punch"
//         );
//     };

//     const handlePointerOver = () => {
//         setIsHovered(true);
//     };

//     const handlePointerOut = () => {
//         setIsHovered(false);
//     };

//     console.log(animationName)
//     console.log(isHovered)

//     return (
//         <group
//             ref={group}
//             {...props}
//             dispose={null}
//             onClick={handleClick}
//             onPointerOver={handlePointerOver}
//             onPointerOut={handlePointerOut}
            
//         >
//             <group name="Scene">
//                 <group name="CharacterArmature">
//                     <group name="Dragon">
//                         <skinnedMesh
//                             name="Cube221"
//                             geometry={nodes.Cube221.geometry}
//                             material={materials.Dragon_Main}
//                             skeleton={nodes.Cube221.skeleton}
//                         />
//                         <skinnedMesh
//                             name="Cube221_1"
//                             geometry={nodes.Cube221_1.geometry}
//                             material={materials.Dragon_Secondary}
//                             skeleton={nodes.Cube221_1.skeleton}
//                         />
//                         <skinnedMesh
//                             name="Cube221_2"
//                             geometry={nodes.Cube221_2.geometry}
//                             material={materials.Dragon_Horn}
//                             skeleton={nodes.Cube221_2.skeleton}
//                         />
//                         <skinnedMesh
//                             name="Cube221_3"
//                             geometry={nodes.Cube221_3.geometry}
//                             material={materials.Eye_Black}
//                             skeleton={nodes.Cube221_3.skeleton}
//                         />
//                         <skinnedMesh
//                             name="Cube221_4"
//                             geometry={nodes.Cube221_4.geometry}
//                             material={materials.Eye_White}
//                             skeleton={nodes.Cube221_4.skeleton}
//                         />
//                     </group>
//                     <primitive object={nodes.Root} />
//                 </group>
//             </group>
//         </group>
//     );
// }

// useGLTF.preload("/models/Dragon_Evolved.gltf");

// export default function Dragon() {
//     return (
//         <>
//             <Canvas className="py-20">
//                 <DragonModel />
//                 <Environment preset="sunset" />
//                 <OrbitControls enableZoom={false} />
//             </Canvas>
//         </>
//     )
// }
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 public/models/Dragon_Evolved.gltf -o src/components/Dragon_Evolved.jsx -r public
*/
'use client'
import { useAnimations, useGLTF, Environment, OrbitControls } from "@react-three/drei";
import React, { useEffect, useRef } from "react";
import { Canvas } from '@react-three/fiber'

export function DragonEvolved({ hovered, ...props }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF(
    "/models/Dragon_Evolved.gltf"
  );
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    const anim = hovered ? "Headbutt" : "Flying_Idle";
    actions[anim].reset().fadeIn(0.5).play();
    return () => actions[anim].fadeOut(0.5);
  }, [hovered]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="CharacterArmature">
          <primitive object={nodes.Root} />
          <group name="Dragon">
            <skinnedMesh
              name="Cube221"
              geometry={nodes.Cube221.geometry}
              material={materials.Dragon_Main}
              skeleton={nodes.Cube221.skeleton}
            />
            <skinnedMesh
              name="Cube221_1"
              geometry={nodes.Cube221_1.geometry}
              material={materials.Dragon_Secondary}
              skeleton={nodes.Cube221_1.skeleton}
            />
            <skinnedMesh
              name="Cube221_2"
              geometry={nodes.Cube221_2.geometry}
              material={materials.Dragon_Horn}
              skeleton={nodes.Cube221_2.skeleton}
            />
            <skinnedMesh
              name="Cube221_3"
              geometry={nodes.Cube221_3.geometry}
              material={materials.Eye_Black}
              skeleton={nodes.Cube221_3.skeleton}
            />
            <skinnedMesh
              name="Cube221_4"
              geometry={nodes.Cube221_4.geometry}
              material={materials.Eye_White}
              skeleton={nodes.Cube221_4.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/Dragon_Evolved.gltf");

export default function Dragon(){
    return(
        <>
        <Canvas clasName="py-20">
            <DragonEvolved />
                <Environment preset="sunset" />
                <OrbitControls enableZoom={false} />
        </Canvas>
        </>
    )
}